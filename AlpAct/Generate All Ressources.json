{
  "name": "Generate All Ressources",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={\n  \"task\": \"Reconstruis un contexte projet complet en mixant le contexte de base et l’hypothèse courante.\",\n  \"inputs\": {\n    \"contexte_base\": {{ $('Format contexte brut du projet').item.json.formatted_analysis }},\n    \"hypothese_courante\": \nPROBLEME ADRESSÉ:\n{{ $json.property_probl_me_r_solu }}\nSEGMENT CLIENT ENVISAGÉ\n{{ $json.property_segment_client }}\nPROPOSITION DE VALEUR TESTÉE\n{{ $json.property_proposition_de_valeur }}\nRESUMÉ DU TEST\n{{ $json.name }}\nRAISON DE LA SELECTION PAR LE MODELE IA\n{{ $json.property_pourquoi_la_tester }}\nID de l'hypothese courante dans Notion\n{{ $json.id }}\nNOM DU PROJET\n{{ $('Get infos projet').item.json.project_name }}\n\n  },\n  \"output_format\": {\n    \"hypothese\":{\n      \"vision_projet\": {\n        \"mission\": \"\",\n        \"probleme_central\": \"\",\n        \"solution_proposee\": \"\"\n      },\n      \"marche_cible\": {\n        \"segment_principal\": \"\",\n        \"taille_marche\": \"\",\n        \"concurrents_principaux\": [],\n        \"canaux_acquisition\": []\n      },\n      \"produit\": {\n        \"value_proposition\": \"\",\n        \"fonctionnalites_cles\": [],\n        \"avantage_concurrentiel\": \"\"\n      },\n      \"contexte_business\": {\n        \"nom_du_projet\":\"\",\n        \"stade_projet\": \"\",\n        \"objectifs_prioritaires\": [],\n        \"contraintes_identifiees\": \"\"\n      },\n      \"hypothese_courante\": {\n        \"id\": \"\",\n        \"id_Notion\":\"{{ $json.id }}\",\n        \"segment\": \"\",\n        \"probleme\": \"\",\n        \"value_prop\": \"\",\n        \"resume\": \"\",\n        \"raison_selection\": \"\"\n      },\n      \"gaps_questions\": {\n        \"infos_manquantes\": [],\n        \"incoherences\": [],\n        \"zones_flou\": []\n      }\n    }\n  }\n}\n",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Tu es un assistant spécialisé en stratégie startup. \nTa mission est de reconstruire un contexte projet complet à partir :\n1. d’un contexte de base (vision, problème, solution, marché, produit, objectifs, contraintes, hypothèses initiales, gaps).\n2. d’une hypothèse PMF retenue (proposition de valeur + segment client + problème résolu + résumé de test).\n\nTon rôle est de fusionner ces deux sources de données pour produire une version consolidée et cohérente du projet, utilisable comme référence pour générer des ressources d’acquisition.\n\nRègles :\n- Préserve la structure du contexte (vision_projet, marche_cible, produit, contexte_business, hypotheses_courantes, gaps_questions).\n- Mets en avant la combinaison segment + problème + value proposition de l’hypothèse retenue comme « hypothèse_courante ».\n- Si des incohérences existent entre contexte de base et hypothèse, fais prévaloir l’hypothèse courante et ajuste la cohérence générale.\n- Résume clairement et garde le format JSON structuré.\n- Le résultat doit être directement exploitable comme input pour d’autres workflows (landing page, campagnes, prospection).\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        60,
        440
      ],
      "id": "8aaeba22-70f7-45b7-a5fb-92a16771bdc8",
      "name": "Rebuild du contexte pour l'hypothèse testée"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        60,
        660
      ],
      "id": "1cec3e75-15fc-4c95-8fc4-3e99ff849224",
      "name": "GPT-4o-MINI",
      "credentials": {
        "openAiApi": {
          "id": "xA5aDLFhcAyipXLc",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n    \"hypothese\":{\n      \"vision_projet\": {\n        \"mission\": \"\",\n        \"probleme_central\": \"\",\n        \"solution_proposee\": \"\"\n      },\n      \"marche_cible\": {\n        \"segment_principal\": \"\",\n        \"taille_marche\": \"\",\n        \"concurrents_principaux\": [],\n        \"canaux_acquisition\": []\n      },\n      \"produit\": {\n        \"value_proposition\": \"\",\n        \"fonctionnalites_cles\": [],\n        \"avantage_concurrentiel\": \"\"\n      },\n      \"contexte_business\": {\n        \"nom_du_projet\":\"\",\n        \"stade_projet\": \"\",\n        \"objectifs_prioritaires\": [],\n        \"contraintes_identifiees\": \"\"\n      },\n      \"hypothese_courante\": {\n        \"id\": \"\",\n        \"id_Notion\":\"{{ $json.id }}\",\n        \"segment\": \"\",\n        \"probleme\": \"\",\n        \"value_prop\": \"\",\n        \"resume\": \"\",\n        \"raison_selection\": \"\"\n      },\n      \"gaps_questions\": {\n        \"infos_manquantes\": [],\n        \"incoherences\": [],\n        \"zones_flou\": []\n      }\n    }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        220,
        660
      ],
      "id": "6bc9f33d-92d0-469a-b131-af1cab326045",
      "name": "Structured Output Parser5"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "qHgckyxSSjagk9iq",
          "mode": "list",
          "cachedResultName": "Create Ressources Acquisition"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "hypothese": "={{ $json.output.hypothese }}",
            "id_Notion": "={{ $json.output.hypothese.hypothese_courante.id_Notion }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "hypothese",
              "displayName": "hypothese",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            },
            {
              "id": "id_Notion",
              "displayName": "id_Notion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        660,
        440
      ],
      "id": "af4ea871-655b-4b62-84e6-edb4abd0af07",
      "name": "Create Ressources Acquisition",
      "notesInFlow": true,
      "notes": "On attend pas la complétion de chaque workflow pour paralléliser."
    },
    {
      "parameters": {
        "content": "## Rebuild du contexte pour l'hypothèse testée\nOn reconstruit le contexte projet complet en intégrant les données de l'hypothèse courante qu'on va tester.",
        "height": 620,
        "width": 580
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        220
      ],
      "typeVersion": 1,
      "id": "1507493a-8b5a-4a4e-8ff7-486bc481147b",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Création des différentes ressources",
        "height": 1020,
        "width": 580
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        520,
        220
      ],
      "typeVersion": 1,
      "id": "9b608cce-401a-48f3-a45b-3b28099c746f",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "C2c1go1oOHzHxVqN",
          "mode": "list",
          "cachedResultName": "Create Landing Page"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        660,
        800
      ],
      "id": "4ddfafba-0f40-49cf-8cad-f224af8aaae8",
      "name": "Create Landing Page"
    },
    {
      "parameters": {
        "path": "generate-ressources",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -560,
        460
      ],
      "id": "a9163023-6cfe-477c-84ae-c17931d42768",
      "name": "Webhook",
      "webhookId": "d686fd79-b405-4fab-866f-7b5308c75328"
    }
  ],
  "pinData": {},
  "connections": {
    "Rebuild du contexte pour l'hypothèse testée": {
      "main": [
        [
          {
            "node": "Create Ressources Acquisition",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Landing Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT-4o-MINI": {
      "ai_languageModel": [
        [
          {
            "node": "Rebuild du contexte pour l'hypothèse testée",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser5": {
      "ai_outputParser": [
        [
          {
            "node": "Rebuild du contexte pour l'hypothèse testée",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Rebuild du contexte pour l'hypothèse testée",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7aeafc11-97df-4c05-aed7-488f6f905090",
  "meta": {
    "instanceId": "cb0d888b2669ace4f2f781e684ee8100f0ad3fd9239d2c021aab9cca9e9602ef"
  },
  "id": "o9HoGAfA6go9LPxu",
  "tags": []
}