{
  "name": "Generate Visuals",
  "nodes": [
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "workspaceId": "w8fin9y3",
        "projectId": "pb01kdovzticqxi",
        "table": "mgkbmw38vd2aknn",
        "limit": 1,
        "options": {
          "where": "=(project_name,eq,{{ $('Start').item.json.project_name }})"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -60,
        860
      ],
      "id": "21edcb95-1c89-4b9e-a595-50b6a6a3f0b9",
      "name": "Get project context",
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "A7ud9P88oTJkeL1f",
          "name": "NocoDb AlpAct - Cloud"
        }
      }
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "workspaceId": "w8fin9y3",
        "projectId": "pb01kdovzticqxi",
        "table": "mxejv5f52945plh",
        "options": {
          "where": "=(project_name,eq,{{ $('Start').item.json.project_name }})~and(hypothesis_id,eq,{{ $('Start').item.json.hypothese_id }})"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -60,
        600
      ],
      "id": "616cec8f-cdcc-4337-8a09-8d53727747f8",
      "name": "Get selected hypothesis",
      "executeOnce": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "A7ud9P88oTJkeL1f",
          "name": "NocoDb AlpAct - Cloud"
        }
      }
    },
    {
      "parameters": {
        "content": "## On reconstruit le contexte du projet avec l'hypothèse à tester",
        "height": 700,
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -200,
        360
      ],
      "typeVersion": 1,
      "id": "1d14ebf6-eb4b-4b32-a6ae-174b22bc23e0",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "workspaceId": "w8fin9y3",
        "projectId": "pb01kdovzticqxi",
        "table": "ml9civoifdkzxxn",
        "options": {
          "where": "=(project_name,eq,{{ $('Start').item.json.project_name }})"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        500,
        620
      ],
      "id": "4441388f-33e5-4c71-9a52-8cdb8259ca9a",
      "name": "Get brand identity",
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "A7ud9P88oTJkeL1f",
          "name": "NocoDb AlpAct - Cloud"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {
          "includeUnpaired": true
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        280,
        620
      ],
      "id": "e3f9f38e-e10e-4c24-9082-99e90d985529",
      "name": "FULL PROJECT CONTEXT + HYPOTHESIS"
    },
    {
      "parameters": {
        "jsonSchemaExample": "[\n  \"A customer at a fast-food counter returning a reusable container with a smile, showing the deposit system in action.\",\n  \"A clean, modern illustration of a stack of branded reusable food boxes with a green recycling loop symbol around them.\",\n  \"An eco-friendly restaurant scene where disposable packaging is replaced by reusable containers, highlighting sustainability.\"\n]\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1180,
        940
      ],
      "id": "24e95c0e-9764-457a-9267-a1a9b1382ac4",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1400,
        720
      ],
      "id": "14a4aaaa-29fe-407c-af62-d51b257ee2b3",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Context of the project in JSON format, including a product-market-fit hypothesis currently tested:\n{{$('FULL PROJECT CONTEXT + HYPOTHESIS').all().toJsonString()}}\n\nHere is the current brand identity (optional)\n{{ $('Get brand identity').all().length > 0 ? $('Get brand identity').item.json.toJsonString() : \"/\" }}\nTask:\nGenerate 2 to 3 suggestions of visuals that could illustrate this project and hypothesis. \nReturn only a valid JSON array of strings, each string being a distinct suggestion.\n",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are an AI assistant specialized in generating creative visual ideas for startup landing pages and marketing tests.  \n\nYour task is to propose a short list of 2 to 3 visual suggestions that could illustrate the project’s mission and the tested hypothesis.  \n\nConstraints:  \n- The suggestions must be concrete and easy to understand.  \n- Each suggestion should be 1–2 sentences long.  \n- Output must be a valid JSON array of strings.  \n- Do not include explanations outside of JSON.  \n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        880,
        600
      ],
      "id": "1354787c-4325-4ab1-ae3a-154f2decca35",
      "name": "Create 3 visual suggestions"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "dpUiP4jCzC3xjXWs",
          "mode": "list",
          "cachedResultName": "Delete Existing Visuals"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "project_name": "={{ $json.project_name }}",
            "visual_type": "landing_page",
            "hypothese_id": "={{ $json.hypothese_id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "project_name",
              "displayName": "project_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "visual_type",
              "displayName": "visual_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "hypothese_id",
              "displayName": "hypothese_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -480,
        700
      ],
      "id": "0d81ae69-cf84-4cd4-944c-88e9f7b9c3d8",
      "name": "Delete existing visuals",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## Pour assurer l'idempotence, on supprime les visuels précédents de type \"landing_page\"",
        "height": 420,
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -620,
        540
      ],
      "typeVersion": 1,
      "id": "30562554-856c-4e1c-9cc7-1ddc428966d3",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "0ZHLQ2eSt5x7B26B",
          "mode": "list",
          "cachedResultName": "Generate Single Image"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "visual_suggestion": "={{ $json.output }}",
            "project_full_context": "={{ $('FULL PROJECT CONTEXT + HYPOTHESIS').item.json.toJsonString() }}",
            "project_name": "={{ $('Start').item.json.project_name }}",
            "hypothese_id": "={{ $('Start').item.json.hypothese_id}}"
          },
          "matchingColumns": [
            "toJsonString",
            "output",
            "contexte_projet_contexte_business_nom_du_projet"
          ],
          "schema": [
            {
              "id": "project_full_context",
              "displayName": "project_full_context",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "visual_suggestion",
              "displayName": "visual_suggestion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "project_name",
              "displayName": "project_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "hypothese_id",
              "displayName": "hypothese_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2240,
        740
      ],
      "name": "Call Generate Single Image",
      "id": "6c4ca100-094a-4937-8c0a-5e982bb72d0a"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {
          "responseFormat": "json_object"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        980,
        940
      ],
      "id": "c663826e-b9ed-443e-8aa1-1a0e69432c8b",
      "name": "GPT-5-MINI",
      "credentials": {
        "openAiApi": {
          "id": "xA5aDLFhcAyipXLc",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1900,
        720
      ],
      "id": "a80e518c-d085-404c-814a-b5df0c257b99",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "content": "## Génération des images + ajout dans Notion",
        "height": 720,
        "width": 680
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1800,
        340
      ],
      "typeVersion": 1,
      "id": "69650a46-c962-4163-b1e4-f7b4b69ddedc",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "inputSource": "jsonExample",
        "jsonExample": "{\n\"hypothese_id\": \"H1_1756912325593\",\n\"project_name\": \"GreenPack\"\n}"
      },
      "id": "c055762a-8fe7-4141-a639-df2372f30060",
      "typeVersion": 1.1,
      "name": "Start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -960,
        700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a8d3cdee-92f7-48b6-b581-2d7b9590e368",
              "name": "output",
              "value": "done",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2220,
        580
      ],
      "id": "05e1d225-3cf8-4703-b73b-9817f316968c",
      "name": "RETURN"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-nano",
          "mode": "list",
          "cachedResultName": "gpt-5-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1260,
        1160
      ],
      "id": "8e0fd646-5575-419e-a251-0de26d6d257c",
      "name": "GPT-5-NANO",
      "credentials": {
        "openAiApi": {
          "id": "xA5aDLFhcAyipXLc",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {
    "Start": [
      {
        "json": {
          "hypothese_id": "P3_S2_VP1_1757066558860",
          "project_name": "La meute qui ose"
        }
      }
    ]
  },
  "connections": {
    "Get selected hypothesis": {
      "main": [
        [
          {
            "node": "FULL PROJECT CONTEXT + HYPOTHESIS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get project context": {
      "main": [
        [
          {
            "node": "FULL PROJECT CONTEXT + HYPOTHESIS",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get brand identity": {
      "main": [
        [
          {
            "node": "Create 3 visual suggestions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FULL PROJECT CONTEXT + HYPOTHESIS": {
      "main": [
        [
          {
            "node": "Get brand identity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Create 3 visual suggestions",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create 3 visual suggestions": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Generate Single Image": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT-5-MINI": {
      "ai_languageModel": [
        [
          {
            "node": "Create 3 visual suggestions",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "RETURN",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call Generate Single Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "Delete existing visuals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete existing visuals": {
      "main": [
        [
          {
            "node": "Get selected hypothesis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get project context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT-5-NANO": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d1f5170c-6c58-485f-8f5c-be9054f99f91",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "cb0d888b2669ace4f2f781e684ee8100f0ad3fd9239d2c021aab9cca9e9602ef"
  },
  "id": "Jg8ZS5qqpmLpXCqk",
  "tags": [
    {
      "createdAt": "2025-09-03T16:26:16.510Z",
      "updatedAt": "2025-09-03T16:26:16.510Z",
      "id": "fMhvLwPBTuM8eI5O",
      "name": "AlpAct"
    }
  ]
}